<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg height="520.0150" name="snapshot" onload="LoadHandler(evt)" onzoom="zoomHandler(evt)" width="1000.0" xmlns="http://www.w3.org/2000/svg"><AttributeMap name="Node Type" value="node color"/><defs><marker id="arrowHead-4565549" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(186,85,211)"/></marker><marker id="arrowHead-3308225" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(205,133,63)"/></marker><marker id="arrowHead-12156236" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(70,130,180)"/></marker><marker id="arrowHead-3318692" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(205,92,92)"/></marker><marker id="arrowHead-10496" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(255,215,0)"/></marker><marker id="arrowHead-2987746" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(210,105,30)"/></marker></defs><g id="displayBean" transform="matrix(1.0882993550901385,0.0,0.0,1.0882993550901385,-44.14967754506927,23.548160625000946)"><image visibility="hidden"><![CDATA[ffd8ffe000104a46494600010200000100010000ffdb004300080606070605080707070909080a0c140d0c0b0b0c1912130f141d1a1f1e1d1a1c1c20242e2720222c231c1c2837292c30313434341f27393d38323c2e333432ffdb0043010909090c0b0c180d0d1832211c213232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232ffc00011080034006403012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00f7fa28a2800aaf7376b6e4295666232318ab159ba97fae4ff77fad655a6e107245415e5662c3a992313c054faa364568d6056fd461ea4a69f315522a2f40a6bb6c8d9f19da09a75473ff00c7bcbfee1fe55d0666649a85d993310855303e5752dfae45685adcfda519b66ddadb719cf607fad62ef4fef2fe75a5a5106194839fde7f415c542ace53b48dea42295d17e8a28aed300a28a2800a28a2800a63c51c98df1a363a6e19ac59a4925999ccd283d3092151c67b0fad5cd3a57ded1b3b32e3237124fe75846bc252e52dc1a572e0b6801c8823cffb82a4c739071ed41271c2e4d1cfb56d64419b7779389648a3611ed61f30193d01ef4eb5ba9657486421b3d5b1827bd57ba5617931c1c64738ff006453acd4fdad3e53819edec6b8d54a9ed6dd2e6ee31e4b9af45215c8eff9d181eff9d7698142f6f668e431c0103291967048231e83149697d34932c732c64b9c02808c704f727d2abdf32ade481980e9d4fb0a6da3ab5f400302771e87fd935c4eb4d55e5e9737e48f25cdba28a2bb4c028a28a00c66b4b9dcd88188c9e772ff008d59b08268e6669232836e3923fa1ad0a2b08e1e3197322dd46d5828a28adc833ee75348647884133e38dc81719fc48a96d6fd2e9d9045246c067e70391f81359d37fc7c4bfefb7f3a9b4fff008fdffb66dfcd6b8e38893a9c86ce9ae5b9ad451457618851451400514514005145140051451400514514015dac6dddcb321c9393f391fd69d15a4303ef8d086c632589e3f1a28a9e48def61dd93514515420a28a2800a28a2803ffd9]]></image><g id="nodes_and_labels"><rect fill="rgb(245,224,171)" height="500.0" id="http://www.owl-ontologies.com/vw_cbr.owl#Type" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.21,0.0,0.0,0.21,296.6159238833824,26.86307465961285)" visibility="visible" width="500.0"><transform height="0.21" scaleX="296.6159238833824" scaleY="26.86307465961285" width="0.0" x="0.21" y="0.0"/><focus>false</focus><title>Type (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.21,0.0,0.0,0.21,296.6159238833824,26.86307465961285)" x="20.5" y="28.064453125">Type<title>Type (Primitive Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="http://www.owl-ontologies.com/vw_cbr.owl#TrashCount" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.21,0.0,0.0,0.21,195.60088292296774,222.48614602176025)" visibility="visible" width="500.0"><transform height="0.21" scaleX="195.60088292296774" scaleY="222.48614602176025" width="0.0" x="0.21" y="0.0"/><focus>false</focus><title>TrashCount (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.21,0.0,0.0,0.21,195.60088292296774,222.48614602176025)" x="40.0" y="28.064453125">TrashCount<title>TrashCount (Primitive Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="http://www.owl-ontologies.com/vw_cbr.owl#Solutions" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.21,0.0,0.0,0.21,799.5553833563337,166.55635467851755)" visibility="visible" width="500.0"><transform height="0.21" scaleX="799.5553833563337" scaleY="166.55635467851755" width="0.0" x="0.21" y="0.0"/><focus>false</focus><title>Solutions (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.21,0.0,0.0,0.21,799.5553833563337,166.55635467851755)" x="33.5" y="28.064453125">Solutions<title>Solutions (Primitive Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="http://www.owl-ontologies.com/vw_cbr.owl#Danger" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.21,0.0,0.0,0.21,625.0779266140452,18.546489091253278)" visibility="visible" width="500.0"><transform height="0.21" scaleX="625.0779266140452" scaleY="18.546489091253278" width="0.0" x="0.21" y="0.0"/><focus>false</focus><title>Danger (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.21,0.0,0.0,0.21,625.0779266140452,18.546489091253278)" x="28.0" y="28.064453125">Danger<title>Danger (Primitive Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="http://www.owl-ontologies.com/vw_cbr.owl#Case" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.21,0.0,0.0,0.21,500.0688417471679,159.50202751271377)" visibility="visible" width="500.0"><transform height="0.21" scaleX="500.0688417471679" scaleY="159.50202751271377" width="0.0" x="0.21" y="0.0"/><focus>false</focus><title>Case (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.21,0.0,0.0,0.21,500.0688417471679,159.50202751271377)" x="22.5" y="28.064453125">Case<title>Case (Primitive Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="http://www.owl-ontologies.com/vw_cbr.owl#AggregateState" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.21,0.0,0.0,0.21,495.6489711797576,330.7189559476017)" visibility="visible" width="500.0"><transform height="0.21" scaleX="495.6489711797576" scaleY="330.7189559476017" width="0.0" x="0.21" y="0.0"/><focus>false</focus><title>AggregateState (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.21,0.0,0.0,0.21,495.6489711797576,330.7189559476017)" x="49.5" y="28.064453125">AggregateState<title>AggregateState (Primitive Class)</title></text></g><g id="arcs"><line marker-end="url(#arrowHead-3308225)" onmousemove="mousemoveHandler(evt)" stroke="rgb(205,133,63)" stroke-width="1" visibility="visible" x1="500.0688417471679" x2="401.6159238833824" y1="177.77521426322284" y2="113.58988790910374"><title>types (Domain&gt;Range): "Case"  to  "Type"</title></line><line marker-end="url(#arrowHead-12156236)" onmousemove="mousemoveHandler(evt)" stroke="rgb(70,130,180)" stroke-width="1" visibility="visible" x1="599.1294595775053" x2="631.0173087837078" y1="159.50202751271377" y2="123.54648909125328"><title>danger (Domain&gt;Range): "Case"  to  "Danger"</title></line><line marker-end="url(#arrowHead-2987746)" onmousemove="mousemoveHandler(evt)" stroke="rgb(210,105,30)" stroke-width="1" visibility="visible" x1="551.2135832052107" x2="549.5042297217148" y1="264.50202751271377" y2="330.7189559476017"><title>state (Domain&gt;Range): "Case"  to  "AggregateState"</title></line><line marker-end="url(#arrowHead-4565549)" onmousemove="mousemoveHandler(evt)" stroke="rgb(186,85,211)" stroke-width="1" visibility="visible" x1="605.0688417471679" x2="799.5553833563337" y1="213.23865128289978" y2="217.81973090833154"><title>solution (Domain&gt;Range): "Case"  to  "Solutions"</title></line><line marker-end="url(#arrowHead-3318692)" onmousemove="mousemoveHandler(evt)" stroke="rgb(205,92,92)" stroke-width="1" visibility="visible" x1="500.0688417471679" x2="300.60088292296774" y1="222.862501089292" y2="264.125672445182"><title>count (Domain&gt;Range): "Case"  to  "TrashCount"</title></line></g></g><g name="non_display" visibility="hidden" xmlns=""><g name="info" visibility="hidden"><text name="userName">M. Navrotskiy</text><text name="prjName">vw_cbr</text><text name="timeStamp">Пт, 27 дек 2013 11:46:16 +0400</text><text name="userComment">[no comment entered]</text><text id="currentScale">1.088299355090136</text></g><text name="cprels"/><text name="focusedNodeID">-1</text><text height="477.8097106902456" name="screenCoord" width="918.8648282504723" x="40.56758587476381" y="-21.63757656830603"/><g id="displayFilters" name="displayFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact filter|Node Type|java.lang.String|Enumeration|Logical Operation|Restriction|Individual</text><text id="filter_1" name="filter_1">nominal attribute|relationship filter|Arc Type|java.lang.String|count|count (Necessary and Sufficient)|count (Necessary)|danger|danger (Necessary and Sufficient)|danger (Necessary)|has instance|has subclass|solution|solution (Necessary and Sufficient)|solution (Necessary)|state|state (Necessary and Sufficient)|state (Necessary)|time|time (Necessary and Sufficient)|time (Necessary)|types|types (Necessary and Sufficient)|types (Necessary)</text><text id="filter_2" name="filter_2">nominal attribute|artifact filter|Artifact id|java.lang.Long|444</text></g><g id="dataFilters" name="dataFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact type string filter|Node Type|java.lang.String|Enumeration|Logical Operation|Restriction|Individual</text><text id="filter_1" name="filter_1">nominal attribute|relationship type string filter|Arc Type|java.lang.String|count|count (Necessary and Sufficient)|count (Necessary)|danger|danger (Necessary and Sufficient)|danger (Necessary)|solution|solution (Necessary and Sufficient)|solution (Necessary)|state|state (Necessary and Sufficient)|state (Necessary)|time|time (Necessary and Sufficient)|time (Necessary)|types|types (Necessary and Sufficient)|types (Necessary)</text></g></g><script><![CDATA[var svgSVGElement;var ZOOM_FACTOR_IN = 1.10;var ZOOM_FACTOR_OUT = 1.0/ZOOM_FACTOR_IN;var ZOOM_DIRECTION_IN = "in"var ZOOM_DIRECTION_OUT = "out"var ZOOM_KEY_IN = "Z"var ZOOM_KEY_OUT = "X"var ZOOM_TIMEOUT = 50; // millisecondsvar zoomFactor;var zoomDirection;var zooming = false;var mouseLocX = 0.0;var mouseLocY = 0.0;var ABSOLUTE_ARC_WIDTH = 2.0;var newScale = 1.0;var newTransX = 0.0;var newTransY = 0.0;function dumpProps(obj, parent) {   for (var i in obj) {      if (parent) { msg = parent + "." + i + "\n" + obj[i]; } else { var msg = i + "\n" + obj[i]; }      if (!confirm(msg)) { return; }      if (typeof obj[i] == "object") {          if (parent) { dumpProps(obj[i], parent + "." + i); } else { dumpProps(obj[i], i); }      }   }}function LoadHandler (evt) { 	if ( window.svgDocument == null ) {		svgDocument = evt.target.ownerDocument;	}	svgSVGElement = svgDocument.getDocumentElement();	new Title (svgDocument, 12); 	var currentScale = svgDocument.getElementById("currentScale");	var cscale = currentScale.getFirstChild().getNodeValue();	//alert("displaybean scale "+cscale);	var svgscale = svgSVGElement.getCurrentScale();	//alert("svg startup scale "+svgscale);	adjustArcWidths(cscale);// 	setTimeout('adjustArcWidths(cscale)', 10);	 }  function zoomHandler(evt) { 	Title_Zoom(evt);		var cscale = svgSVGElement.getCurrentScale();	//alert("zooming...true svg scale: "+ cscale);	adjustArcWidths(cscale);// 	setTimeout("adjustArcWidths(csale)", 100);	//setTimeout('adjustCommentBox()', 100); }  // update the thickness of the arcs so that they always appear the  // same thickness no matter what the current scale is  function adjustArcWidths (cs) {	//alert("pass in scale " + cs); 	// look for line elements	var lineElements = svgDocument.getElementsByTagName ("line");//	var cs = svgSVGElement.getCurrentScale();	if((cs<=1)){	   return;	}	if(cs>=2){	   cs = cs*2;		}	var newStrokeWidth = ABSOLUTE_ARC_WIDTH/cs;	for (var i = 0; i<lineElements.getLength(); i++) {		var lineElement = lineElements.item(i);		var strokeWidth = lineElement.getAttribute ("stroke-width");		// do not let stroke too thick 		if(newStrokeWidth>=0.4){		  newStrokeWidth = 0.1;		}		if(newStrokeWidth<=0.1){		  newStrokeWidth = 0.2;		}			   lineElement.setAttribute ("stroke-width", "" + newStrokeWidth);	}//   	alert("draw stroke width: " + newStrokeWidth); }   function adjustCommentBox () {	var commentTransElement = svgDocument.getElementById ("commentTranslate");	var commentScaleElement = svgDocument.getElementById ("commentScale");  	var currSVGScale = svgSVGElement.currentScale;	var newCommentScale = 1.0/currSVGScale;	var currSVGTransX = svgSVGElement.currentTranslate.x	var currSVGTransY = svgSVGElement.currentTranslate.y	var newCommentTransX =  - currSVGTransX;	var newCommentTransY =  - currSVGTransY;	commentScaleElement.setAttribute("transform", "scale(" + newCommentScale + ")");	commentTransElement.setAttribute("transform", "translate(" + newCommentTransX + "," + newCommentTransY + ")"); }  function keyupHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "up";	if (zooming && zoomDirection == ZOOM_DIRECTION_IN && input_text == ZOOM_KEY_IN) {  		// zoom in  		zooming = false;	} else if (zooming && zoomDirection == ZOOM_DIRECTION_OUT && input_text == ZOOM_KEY_OUT) {		// zoom out  		zooming = false;	} else {		// do nothing	}}function keydownHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "down";	if (input_text == ZOOM_KEY_IN) {  		// start zooming in  		zoomDirection = ZOOM_DIRECTION_IN;  		zoomFactor = ZOOM_FACTOR_IN;  		zooming = true;	} else if (input_text == ZOOM_KEY_OUT) {		// start zooming out		zoomDirection = ZOOM_DIRECTION_OUT  		zoomFactor = ZOOM_FACTOR_OUT;  		zooming = true;	} else {		zooming = false;	}	// keep zooming until a keyup event is thrown	//if (zooming) {		//setTimeout('zoomOneStep()', ZOOM_TIMEOUT);	//}	zoomOneStep();}function mousemoveHandler (evt) {		mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();	var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;	var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	//window.status = scaleAndTransform + "  -  " + mouseLocationTransformed + "  -  " + mouseLocationAbsolute;	Title.Activate(evt);}function zoomOneStep () {  	var oldScale = svgSVGElement.currentScale;  	var oldTransX = svgSVGElement.currentTranslate.x  	var oldTransY = svgSVGElement.currentTranslate.y  	newScale = oldScale; 	newTransX = oldTransX; 	newTransY = oldTransY; 	var oldAbsoluteX = (mouseLocX - oldTransX) / oldScale;	var oldAbsoluteY = (mouseLocY - oldTransY) / oldScale;  	newScale = oldScale * zoomFactor;	// we want the absolute point under the mouse to stay in the same place	//ie. the absolute position of the mouse should be the same when done	newTransX = mouseLocX - newScale * oldAbsoluteX;	newTransY = mouseLocY - newScale * oldAbsoluteY;		// set the new scale and translation  	svgSVGElement.currentScale = newScale;	svgSVGElement.currentTranslate.x = newTransX;  	svgSVGElement.currentTranslate.y = newTransY;}// == Title.js -- Copyright (C) Stefan Goessner ========================function Title(doc, sz) {   this.element = null;  // element to show title of ..   Title.size = sz;      // text size ..   Title.oldScale = document.getDocumentElement().getCurrentScale();     // scaling modified by zooming ..   this.Create(doc);   AddTitleEvents(doc.getDocumentElement());   window.svgTitle = this;}Title.prototype.Create = function(doc){   this.rec = doc.createElement("rect");   this.rec.setAttribute("y", -0.9*Title.size);   this.rec.setAttribute("x", -0.25*Title.size);   this.rec.setAttribute("width", "1");   this.rec.setAttribute("height", 1.25*Title.size);   this.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:1");   this.str = doc.createTextNode("");   this.txt = doc.createElement("text")   this.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");   this.txt.appendChild(this.str);   this.grp = doc.createElement("g"),   this.grp.setAttribute("transform", "translate(0,0)");   this.grp.setAttribute("visibility", "hidden");   this.grp.appendChild(this.rec);   this.grp.appendChild(this.txt);   doc.getDocumentElement().appendChild(this.grp);}Title.Activate = function Title_Activate(evt) {	mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();		var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;		var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	var x = (evt.getClientX() - document.getDocumentElement().getCurrentTranslate().getX())/document.getDocumentElement().getCurrentScale() +  0.25*Title.size;	    var y = (evt.getClientY() - document.getDocumentElement().getCurrentTranslate().getY())/document.getDocumentElement().getCurrentScale() - Title.size;	window.svgTitle.element = evt.getCurrentTarget();	window.svgTitle.str.setNodeValue(TextOf(TitleElementOf(window.svgTitle.element)));	window.svgTitle.rec.setAttribute("width", window.svgTitle.txt.getComputedTextLength() + 0.5*Title.size);	window.svgTitle.grp.setAttribute("transform", "translate(" + x + "," + y + ")");	window.svgTitle.grp.setAttribute("visibility", "visible");}Title.Zoom = function Title_Zoom(evt) {   var newscl = evt.getTarget().getOwnerDocument().getDocumentElement().getCurrentScale();   Title.size *= Title.oldScale/newscl;   //alert ("Title.size: " + Title.size);   Title.oldScale = newscl;   window.svgTitle.rec.setAttribute("y", -0.9*Title.size);   window.svgTitle.rec.setAttribute("x", -0.25*Title.size);   window.svgTitle.rec.setAttribute("height", 1.25*Title.size);   window.svgTitle.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:" + 1/document.getDocumentElement().getCurrentScale());   window.svgTitle.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");}Title.Register = function Title_Register(elem) {   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// --- local helper functions ------------------------function TitleElementOf(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1 && childs.item(i).getNodeName() == "title") // title element ..         return childs.item(i);      return null;}function TextOf(elem) {   var childs = elem ? elem.getChildNodes() : null;   for (var i=0; childs && i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 3) // text node ..         return childs.item(i).getNodeValue();      return "";}function AddTitleEvents(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1) // element node ..         AddTitleEvents(childs.item(i));   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// === end ======================================================]]></script></svg>